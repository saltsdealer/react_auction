{"ast":null,"code":"var _jsxFileName = \"E:\\\\code5200\\\\mini\\\\client\\\\src\\\\components\\\\Bidding.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Bidding = ({\n  product_id,\n  indicator,\n  user_id,\n  start_price,\n  puser,\n  time,\n  onBiddingUpdate\n}) => {\n  _s();\n  // Assuming 'product_id' is an array of objects with bid details\n  // For example: [{ bidder: 'User1', amount: 100, date: '2023-01-01' }, ...]\n  const [bids, setBids] = useState([]);\n  const [bidAmount, setBidAmount] = useState('');\n  const [bidStatusMessage, setBidStatusMessage] = useState('');\n  const handleBidAmountChange = event => {\n    setBidAmount(event.target.value);\n  };\n  const fetchBids = useCallback(async () => {\n    try {\n      const res = await axios.get(`http://localhost:8800/api/orders/bids/${product_id}`);\n      setBids(res.data); // Update the state with the fetched bids\n    } catch (err) {\n      console.error('Error fetching bids:', err);\n    }\n  }, [product_id]); // product_id is a dependency\n\n  const formatBidder = bidder => {\n    // Check if the bidder string is long enough\n    if (bidder && bidder.length > 2) {\n      return `${bidder.substring(0, 2)}${'*'.repeat(bidder.length - 2)}`;\n    }\n    return bidder;\n  };\n  const formatCreateTime = createTime => {\n    // Extracting up to the minute part of the ISO string\n    return createTime ? createTime.substring(0, 16) : '';\n  };\n  useEffect(() => {\n    // Fetch bids when the component mounts\n    fetchBids();\n    // If the indicator is 'Bidding', set up polling to fetch bids every second\n    let intervalId;\n    if (indicator === 'Bidding') {\n      intervalId = setInterval(fetchBids, 1000); // Poll every 1 second\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [product_id, indicator, fetchBids]);\n  const handleBidClick = async () => {\n    try {\n      const highestBid = bids.length > 0 ? Math.max(...bids.map(bid => bid.price)) : start_price;\n      if (Number(bidAmount) > highestBid) {\n        // Handle successful bid logic\n        setBidStatusMessage(\"Bid successful!\");\n        await axios.post(`http://localhost:8800/api/orders/add`, {\n          bidder_id: user_id,\n          product_id: product_id,\n          bidprice: bidAmount\n        });\n      } else {\n        // Handle unsuccessful bid logic\n        setBidStatusMessage(\"Bidding unsuccessful. Bid amount is too low.\");\n      }\n    } catch (err) {\n      // Handle any errors\n      console.error(\"Error in bidding process:\", err);\n    }\n  };\n  const checkOrder = useCallback(async bids => {\n    try {\n      if (bids.length === 0) {\n        console.log(\"No bids available\");\n        return; // Or handle this case as needed\n      }\n\n      const res = await axios.get(`http://localhost:8800/api/orders/order/${product_id}`);\n      console.log('Order see if created:', res.data.order_status);\n      console.log('bids:', bids);\n      // const highestBid = bids.reduce((max, bid) => bid.price > max.price ? bid : max, bids[0]);\n      // console.log(\"Highest bid price:\", highestBid.price);\n      // console.log(\"Bidder ID of highest bid:\", highestBid.user_id);\n\n      // const response = await axios.post(`http://localhost:8800/api/orders/create`, {\n      //   price: highestBid.price, \n      //   buyer_id: highestBid.user_id\n      // });\n\n      // Handle response as needed, maybe return something or log success\n\n      // or just return true/false based on your requirement\n    } catch (err) {}\n  });\n  useEffect(() => {\n    // Call createOrder whenever indicator changes\n    if (indicator === \"Sold\") {\n      // \n      checkOrder(bids).catch(error => {\n        // Handle the error scenario\n        console.error('Failed to create order:', error);\n      });\n    }\n  }, [indicator, bids]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      backgroundColor: '#e6f5f4',\n      borderRadius: '10px',\n      boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n    },\n    className: \"bids-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Bids: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%',\n        marginTop: '20px',\n        borderCollapse: 'collapse'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        style: {\n          backgroundColor: '#007bff',\n          color: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: '8px 10px',\n              textAlign: 'left'\n            },\n            children: \"Bidder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: '8px 10px',\n              textAlign: 'left'\n            },\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: '8px 10px',\n              textAlign: 'left'\n            },\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: bids.map((bid, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '8px 10px',\n              textAlign: 'left'\n            },\n            children: formatBidder(bid.user_id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '10px 10px',\n              textAlign: 'left'\n            },\n            children: [\" $\", bid.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '10px 10px',\n              textAlign: 'left'\n            },\n            children: formatCreateTime(bid.create_time)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), indicator === 'Bidding' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: user_id !== puser && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Bid amount\",\n          onChange: handleBidAmountChange,\n          style: {\n            padding: '10px',\n            marginRight: '10px',\n            borderRadius: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBidClick,\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px'\n          },\n          children: \"Place Bid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this), bidStatusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: bidStatusMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(Bidding, \"1yknVe6PZQDXyxcEt4pcmwok7PY=\");\n_c = Bidding;\nexport default Bidding;\nvar _c;\n$RefreshReg$(_c, \"Bidding\");","map":{"version":3,"names":["axios","React","useCallback","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Bidding","product_id","indicator","user_id","start_price","puser","time","onBiddingUpdate","_s","bids","setBids","bidAmount","setBidAmount","bidStatusMessage","setBidStatusMessage","handleBidAmountChange","event","target","value","fetchBids","res","get","data","err","console","error","formatBidder","bidder","length","substring","repeat","formatCreateTime","createTime","intervalId","setInterval","clearInterval","handleBidClick","highestBid","Math","max","map","bid","price","Number","post","bidder_id","bidprice","checkOrder","log","order_status","catch","style","padding","backgroundColor","borderRadius","boxShadow","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","marginTop","borderCollapse","color","textAlign","index","create_time","type","placeholder","onChange","marginRight","onClick","border","_c","$RefreshReg$"],"sources":["E:/code5200/mini/client/src/components/Bidding.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\n\r\n\r\nconst Bidding = ({ product_id, indicator, user_id, start_price, puser, time, onBiddingUpdate }) => {\r\n  // Assuming 'product_id' is an array of objects with bid details\r\n  // For example: [{ bidder: 'User1', amount: 100, date: '2023-01-01' }, ...]\r\n  const [bids, setBids] = useState([]);\r\n  const [bidAmount, setBidAmount] = useState('');\r\n  const [bidStatusMessage, setBidStatusMessage] = useState('');\r\n\r\n\r\n  const handleBidAmountChange = (event) => {\r\n    setBidAmount(event.target.value);\r\n  };\r\n\r\n  const fetchBids = useCallback(async () => {\r\n    try {\r\n      const res = await axios.get(`http://localhost:8800/api/orders/bids/${product_id}`);\r\n      setBids(res.data); // Update the state with the fetched bids\r\n    } catch (err) {\r\n      console.error('Error fetching bids:', err);\r\n    }\r\n  }, [product_id]); // product_id is a dependency\r\n\r\n  const formatBidder = (bidder) => {\r\n    // Check if the bidder string is long enough\r\n    if (bidder && bidder.length > 2) {\r\n      return `${bidder.substring(0, 2)}${'*'.repeat(bidder.length - 2)}`;\r\n    }\r\n    return bidder;\r\n  };\r\n\r\n  const formatCreateTime = (createTime) => {\r\n    // Extracting up to the minute part of the ISO string\r\n    return createTime ? createTime.substring(0, 16) : '';\r\n  };\r\n  useEffect(() => {\r\n    // Fetch bids when the component mounts\r\n    fetchBids();\r\n    // If the indicator is 'Bidding', set up polling to fetch bids every second\r\n    let intervalId;\r\n    if (indicator === 'Bidding') {\r\n      intervalId = setInterval(fetchBids, 1000); // Poll every 1 second\r\n    }\r\n    return () => {\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n      }\r\n    };\r\n  }, [product_id, indicator, fetchBids]);\r\n\r\n  const handleBidClick = async () => {\r\n    try {\r\n      const highestBid = bids.length > 0 ? Math.max(...bids.map(bid => bid.price)) : start_price;\r\n      if (Number(bidAmount) > highestBid) {\r\n        // Handle successful bid logic\r\n        setBidStatusMessage(\"Bid successful!\");\r\n        await axios.post(`http://localhost:8800/api/orders/add`, {\r\n          bidder_id: user_id,\r\n          product_id: product_id,\r\n          bidprice: bidAmount\r\n        })\r\n      } else {\r\n        // Handle unsuccessful bid logic\r\n        setBidStatusMessage(\"Bidding unsuccessful. Bid amount is too low.\");\r\n      }\r\n    } catch (err) {\r\n      // Handle any errors\r\n      console.error(\"Error in bidding process:\", err);\r\n    }\r\n  };\r\n\r\n  const checkOrder = useCallback(async (bids) => {\r\n    try {\r\n      if (bids.length === 0) {\r\n        console.log(\"No bids available\");\r\n        return; // Or handle this case as needed\r\n      }\r\n      const res = await axios.get(`http://localhost:8800/api/orders/order/${product_id}`);\r\n      \r\n      console.log('Order see if created:', res.data.order_status);\r\n      console.log('bids:', bids);\r\n      // const highestBid = bids.reduce((max, bid) => bid.price > max.price ? bid : max, bids[0]);\r\n      // console.log(\"Highest bid price:\", highestBid.price);\r\n      // console.log(\"Bidder ID of highest bid:\", highestBid.user_id);\r\n  \r\n      // const response = await axios.post(`http://localhost:8800/api/orders/create`, {\r\n      //   price: highestBid.price, \r\n      //   buyer_id: highestBid.user_id\r\n      // });\r\n  \r\n      // Handle response as needed, maybe return something or log success\r\n      \r\n       // or just return true/false based on your requirement\r\n    } catch (err) {\r\n     \r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Call createOrder whenever indicator changes\r\n    if (indicator === \"Sold\") { // \r\n      checkOrder(bids).catch(error => {\r\n        // Handle the error scenario\r\n        console.error('Failed to create order:', error);\r\n      });\r\n    }\r\n  }, [indicator, bids]);\r\n\r\n  return (\r\n    <div style={{ padding: '20px', backgroundColor: '#e6f5f4', borderRadius: '10px', boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)' }} className=\"bids-table\">\r\n\r\n      <h3>Bids: </h3>\r\n      <table style={{ width: '100%', marginTop: '20px', borderCollapse: 'collapse' }}>\r\n        <thead style={{ backgroundColor: '#007bff', color: 'white' }}>\r\n          <tr>\r\n            <th style={{ padding: '8px 10px', textAlign: 'left' }}>Bidder</th>\r\n            <th style={{ padding: '8px 10px', textAlign: 'left' }}>Amount</th>\r\n            <th style={{ padding: '8px 10px', textAlign: 'left' }}>Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {bids.map((bid, index) => (\r\n            <tr key={index}>\r\n              <td style={{ padding: '8px 10px', textAlign: 'left' }}>{formatBidder(bid.user_id)}</td>\r\n              <td style={{ padding: '10px 10px', textAlign: 'left' }}> ${bid.price}</td>\r\n              <td style={{ padding: '10px 10px', textAlign: 'left' }}>{formatCreateTime(bid.create_time)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {indicator === 'Bidding' && (\r\n        <div style={{ marginTop: '20px' }}>\r\n\r\n          {\r\n            user_id !== puser && (\r\n              <>\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Bid amount\"\r\n                  onChange={handleBidAmountChange}\r\n                  style={{ padding: '10px', marginRight: '10px', borderRadius: '5px' }}\r\n                />\r\n                <button\r\n                  onClick={handleBidClick}\r\n                  style={{ padding: '10px 20px', backgroundColor: '#007bff', color: 'white', border: 'none', borderRadius: '5px' }}\r\n                >\r\n                  Place Bid\r\n                </button>\r\n                {bidStatusMessage && <p>{bidStatusMessage}</p>}\r\n              </>\r\n            )\r\n          }\r\n\r\n        </div>\r\n      )}\r\n      {}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bidding;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}