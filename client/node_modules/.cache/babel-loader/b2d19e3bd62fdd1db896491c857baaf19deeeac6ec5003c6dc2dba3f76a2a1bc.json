{"ast":null,"code":"var _jsxFileName = \"E:\\\\code5200\\\\mini\\\\client\\\\src\\\\pages\\\\Order.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { AuthContext } from '../context/authContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Order = () => {\n  _s();\n  const location = useLocation();\n  const order_id = location.pathname.split(\"/\")[2];\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [orders, setOrder] = useState(null);\n  const [ratings, setRatings] = useState({});\n  const truncateID = id => {\n    if (id && id.length > 2) {\n      return `${id.substring(0, 2)}***`; // Replace with asterisks\n    }\n\n    return id;\n  };\n  const handleRatingChange = (orderId, role, newRating) => {\n    const ratingKey = `${orderId}_${role}`;\n    setRatings(prevRatings => ({\n      ...prevRatings,\n      [ratingKey]: newRating\n    }));\n  };\n  const handlePublishRating = async (orderId, role) => {\n    const ratingKey = `${orderId}_${role}`;\n    const ratingValue = ratings[ratingKey];\n\n    // Validate the rating value\n    if (!ratingValue || ratingValue < 1 || ratingValue > 5) {\n      alert('Rating must be between 1 and 5.');\n      return;\n    }\n\n    // Prepare the data payload for the POST request\n    const data = {\n      order_id: orderId,\n      [`${role}_rate`]: ratingValue // Dynamically set the key based on the role\n    };\n\n    try {\n      // Send a POST request to the server endpoint\n      const response = await axios.post(`http://localhost:8800/api/users/rates`, data);\n      console.log(response.data); // Handle the response as needed\n      alert('Rating published successfully.');\n\n      // Optionally, clear the input field after successful publishing\n      setRatings(prevRatings => ({\n        ...prevRatings,\n        [ratingKey]: '' // Clear the input field\n      }));\n    } catch (error) {\n      console.error('Failed to publish rating:', error);\n      alert('Failed to publish rating.');\n    }\n  };\n  const displayRating = (rate, orderId, role, order) => {\n    if (rate === -1) {\n      const ratingKey = `${orderId}_${role}`;\n      if (role === 'buyer' && currentUser.user_id === order.buyer_id || role === 'seller' && currentUser.user_id === order.seller_id) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            max: \"5\",\n            value: ratings[ratingKey] || '',\n            onChange: e => handleRatingChange(orderId, role, e.target.value),\n            placeholder: \"Rate 1-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePublishRating(orderId, role),\n            children: \"Publish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      } else {\n        return 'Unrated';\n      }\n    }\n    return rate;\n  };\n  const handleStatus = async (orderId, actionType) => {\n    try {\n      const response = axios.post('`http://localhost:8800/api/users/update-status', {\n        order_id: orderId,\n        actionType: actionType\n      });\n      if (response.data.success) {\n        console.log(`${actionType} status updated to 1`);\n        // Here you might want to update the state or inform the user of success\n      } else {\n        console.error('Failed to update status');\n        // Inform the user of failure\n      }\n    } catch (error) {\n      console.error('Error updating status:', error);\n      // Handle errors, for example, show an error message to the user\n    }\n  };\n\n  function updateOrderComments(orderId, comments, role) {\n    // Check which comment to update based on the role\n    const updatePayload = {\n      order_id: orderId,\n      comment: comments,\n      role: role\n    };\n\n    // Making an API call with axios to update the comments in the database\n    axios.post(`http://localhost:8800/api/users/update-comments`, updatePayload).then(response => {\n      console.log('Success:', response.data);\n      alert('Comment uploaded successfully');\n      // Update the UI or state as needed\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n  useEffect(() => {\n    const fetchOrder = async () => {\n      try {\n        console.log(\"res\");\n        const res = await axios.get(`http://localhost:8800/api/users/order/${order_id}`);\n        setOrder(res.data);\n      } catch (err) {\n        console.error(err);\n        // Redirect or handle error\n      }\n    };\n\n    fetchOrder();\n  }, [order_id]);\n  if (!orders || !(currentUser !== null && currentUser !== void 0 && currentUser.user_id)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...or have you logged in yet?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 12\n    }, this); // or any other loading indicator\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-web\",\n    children: orders.map((order, index) => currentUser.user_id === order.buyer_id || currentUser.user_id === order.seller_id ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Order ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 18\n        }, this), \" \", order.order_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Bid Session ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 18\n        }, this), \" \", order.bid_session_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Final Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 18\n        }, this), \" \", order.final_price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Buyer ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 18\n        }, this), \" \", order.buyer_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Seller ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 18\n        }, this), \" \", order.seller_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Buyer Rate:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 18\n        }, this), \" \", displayRating(order.buyer_rate, order.order_id, 'buyer', order)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Seller Rate:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 18\n        }, this), \" \", displayRating(order.seller_rate, order.order_id, 'seller', order)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ship Company:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 18\n        }, this), \" \", order.company]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ship Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 18\n        }, this), \" \", order.ship_status === 0 ? 'Unshipped' : 'Shipped']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this), order.ship_status === 0 && currentUser.user_id === order.seller_id && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          console.log('Button clicked');\n        },\n        children: \"Ship Hopefully You really shipped\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Pay Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 18\n        }, this), \" \", order.pay_status === 0 ? 'Unpaid' : 'Paid']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), order.pay_status === 0 && currentUser.user_id === order.buyer_id && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStatus(order.order_id, 'pay'),\n        children: \"Pay Hopefully You really paid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Buyer Comments : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this), currentUser.user_id === order.buyer_id && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: order.buyer_comment || /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"buyerComment\",\n            placeholder: \"Add comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              const comment = document.querySelector('[name=\"buyerComment\"]').value;\n              updateOrderComments(order.order_id, comment, 'buyer');\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Seller Comments : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this), currentUser.user_id === order.seller_id && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: order.seller_comment || /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"sellerComment\",\n            placeholder: \"Add comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              const comment = document.querySelector('[name=\"sellerComment\"]').value;\n              updateOrderComments(order.order_id, comment, 'seller');\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Product:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 18\n        }, this), \" \", order.pname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-message\",\n      children: \"Only your order is visible\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(Order, \"jz3Wy3KN8w55sLS5lOAuovS5YKI=\", false, function () {\n  return [useLocation];\n});\n_c = Order;\nexport default Order;\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["React","useCallback","useContext","useEffect","useState","Link","useLocation","useNavigate","axios","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Order","_s","location","order_id","pathname","split","currentUser","orders","setOrder","ratings","setRatings","truncateID","id","length","substring","handleRatingChange","orderId","role","newRating","ratingKey","prevRatings","handlePublishRating","ratingValue","alert","data","response","post","console","log","error","displayRating","rate","order","user_id","buyer_id","seller_id","children","type","min","max","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleStatus","actionType","success","updateOrderComments","comments","updatePayload","comment","then","catch","fetchOrder","res","get","err","className","map","index","bid_session_id","final_price","buyer_rate","seller_rate","company","ship_status","pay_status","buyer_comment","name","document","querySelector","seller_comment","pname","_c","$RefreshReg$"],"sources":["E:/code5200/mini/client/src/pages/Order.jsx"],"sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from 'react'\r\n\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nimport { AuthContext } from '../context/authContext';\r\n\r\nconst Order = () => {\r\n\r\n  const location = useLocation();\r\n  const order_id = location.pathname.split(\"/\")[2];\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [orders, setOrder] = useState(null);\r\n  const [ratings, setRatings] = useState({});\r\n\r\n  const truncateID = (id) => {\r\n    if (id && id.length > 2) {\r\n      return `${id.substring(0, 2)}***`; // Replace with asterisks\r\n    }\r\n    return id;\r\n  };\r\n\r\n  const handleRatingChange = (orderId, role, newRating) => {\r\n    const ratingKey = `${orderId}_${role}`;\r\n    setRatings(prevRatings => ({\r\n      ...prevRatings,\r\n      [ratingKey]: newRating\r\n    }));\r\n  };\r\n\r\n  const handlePublishRating = async (orderId, role) => {\r\n    const ratingKey = `${orderId}_${role}`;\r\n    const ratingValue = ratings[ratingKey];\r\n\r\n    // Validate the rating value\r\n    if (!ratingValue || ratingValue < 1 || ratingValue > 5) {\r\n      alert('Rating must be between 1 and 5.');\r\n      return;\r\n    }\r\n\r\n    // Prepare the data payload for the POST request\r\n    const data = {\r\n      order_id: orderId,\r\n      [`${role}_rate`]: ratingValue, // Dynamically set the key based on the role\r\n    };\r\n\r\n    try {\r\n      // Send a POST request to the server endpoint\r\n      const response = await axios.post(`http://localhost:8800/api/users/rates`, data);\r\n      console.log(response.data); // Handle the response as needed\r\n      alert('Rating published successfully.');\r\n\r\n      // Optionally, clear the input field after successful publishing\r\n      setRatings(prevRatings => ({\r\n        ...prevRatings,\r\n        [ratingKey]: '' // Clear the input field\r\n      }));\r\n    } catch (error) {\r\n      console.error('Failed to publish rating:', error);\r\n      alert('Failed to publish rating.');\r\n    }\r\n  };\r\n\r\n  const displayRating = (rate, orderId, role, order) => {\r\n    if (rate === -1) {\r\n      const ratingKey = `${orderId}_${role}`;\r\n\r\n      if ((role === 'buyer' && currentUser.user_id === order.buyer_id) ||\r\n        (role === 'seller' && currentUser.user_id === order.seller_id)) {\r\n        return (\r\n          <>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"5\"\r\n              value={ratings[ratingKey] || ''}\r\n              onChange={(e) => handleRatingChange(orderId, role, e.target.value)}\r\n              placeholder=\"Rate 1-5\"\r\n            />\r\n            <button onClick={() => handlePublishRating(orderId, role)}>Publish</button>\r\n          </>\r\n        );\r\n      } else {\r\n        return 'Unrated';\r\n      }\r\n    }\r\n    return rate;\r\n  };\r\n\r\n  const handleStatus = async (orderId, actionType) => {\r\n\r\n    try {\r\n\r\n      const response = axios.post('`http://localhost:8800/api/users/update-status', { order_id: orderId, actionType: actionType });\r\n\r\n      if (response.data.success) {\r\n        console.log(`${actionType} status updated to 1`);\r\n        // Here you might want to update the state or inform the user of success\r\n      } else {\r\n        console.error('Failed to update status');\r\n        // Inform the user of failure\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating status:', error);\r\n      // Handle errors, for example, show an error message to the user\r\n    }\r\n  };\r\n\r\n  function updateOrderComments(orderId, comments, role) {\r\n    // Check which comment to update based on the role\r\n    const updatePayload = { order_id: orderId, comment: comments, role: role };\r\n\r\n    // Making an API call with axios to update the comments in the database\r\n    axios.post(`http://localhost:8800/api/users/update-comments`, updatePayload)\r\n      .then(response => {\r\n        console.log('Success:', response.data);\r\n        alert('Comment uploaded successfully');\r\n        // Update the UI or state as needed\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchOrder = async () => {\r\n      try {\r\n        console.log(\"res\");\r\n        const res = await axios.get(`http://localhost:8800/api/users/order/${order_id}`);\r\n\r\n        setOrder(res.data);\r\n\r\n      } catch (err) {\r\n        console.error(err);\r\n        // Redirect or handle error\r\n      }\r\n    };\r\n\r\n    fetchOrder();\r\n  }, [order_id]);\r\n\r\n\r\n\r\n  if (!orders || !currentUser?.user_id) {\r\n    return <div>Loading...or have you logged in yet?</div>; // or any other loading indicator\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"order-web\">\r\n      {orders.map((order, index) => (\r\n        (currentUser.user_id === order.buyer_id || currentUser.user_id === order.seller_id) ? (\r\n          <div key={index} className=\"order-card\">\r\n            <div><strong>Order ID:</strong> {order.order_id}</div>\r\n            <div><strong>Bid Session ID:</strong> {order.bid_session_id}</div>\r\n            <div><strong>Final Price:</strong> {order.final_price}</div>\r\n            <div><strong>Buyer ID:</strong> {order.buyer_id}</div>\r\n            <div><strong>Seller ID:</strong> {order.seller_id}</div>\r\n            <div><strong>Buyer Rate:</strong> {displayRating(order.buyer_rate, order.order_id, 'buyer', order)}</div>\r\n            <div><strong>Seller Rate:</strong> {displayRating(order.seller_rate, order.order_id, 'seller', order)}</div>\r\n            <div><strong>Ship Company:</strong> {order.company}</div>\r\n            <div><strong>Ship Status:</strong> {order.ship_status === 0 ? 'Unshipped' : 'Shipped'}</div>\r\n\r\n            {order.ship_status === 0 && currentUser.user_id === order.seller_id && (\r\n              <button onClick={() => {\r\n                console.log('Button clicked');\r\n              }}>\r\n                Ship Hopefully You really shipped\r\n              </button>\r\n\r\n            )}\r\n            <div><strong>Pay Status:</strong> {order.pay_status === 0 ? 'Unpaid' : 'Paid'}</div>\r\n            {order.pay_status === 0 && currentUser.user_id === order.buyer_id && (\r\n              <button onClick={handleStatus(order.order_id, 'pay')} >\r\n                Pay Hopefully You really paid</button>\r\n            )}\r\n\r\n            <div><strong>Buyer Comments : </strong></div>\r\n            {currentUser.user_id === order.buyer_id && (\r\n              <div>\r\n                {order.buyer_comment || (\r\n                  <form>\r\n                    <input type=\"text\" name=\"buyerComment\" placeholder=\"Add comment\" />\r\n                    <button type=\"button\" onClick={() => {\r\n                      const comment = document.querySelector('[name=\"buyerComment\"]').value;\r\n                      updateOrderComments(order.order_id, comment, 'buyer');\r\n                    }}>Submit</button>\r\n                  </form>\r\n                )}\r\n              </div>\r\n            )}\r\n            <div><strong>Seller Comments : </strong></div>\r\n            {currentUser.user_id === order.seller_id && (\r\n              <div>\r\n                {order.seller_comment || (\r\n                  <form>\r\n                    <input type=\"text\" name=\"sellerComment\" placeholder=\"Add comment\" />\r\n                    <button type=\"button\" onClick={() => {\r\n                      const comment = document.querySelector('[name=\"sellerComment\"]').value;\r\n                      updateOrderComments(order.order_id, comment, 'seller');\r\n                    }}>Submit</button>\r\n                  </form>\r\n                )}\r\n              </div>\r\n            )}\r\n            <div><strong>Product:</strong> {order.pname}</div>\r\n\r\n          </div>\r\n        ) : (\r\n          <div key={index} className=\"order-message\">\r\n            Only your order is visible\r\n          </div>\r\n        )\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Order"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3E,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACjE,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGD,QAAQ,CAACE,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM;IAAEC;EAAY,CAAC,GAAGlB,UAAU,CAACO,WAAW,CAAC;EAC/C,MAAM,CAACY,MAAM,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACzC,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1C,MAAMqB,UAAU,GAAIC,EAAE,IAAK;IACzB,IAAIA,EAAE,IAAIA,EAAE,CAACC,MAAM,GAAG,CAAC,EAAE;MACvB,OAAQ,GAAED,EAAE,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAE,KAAI,CAAC,CAAC;IACrC;;IACA,OAAOF,EAAE;EACX,CAAC;EAED,MAAMG,kBAAkB,GAAGA,CAACC,OAAO,EAAEC,IAAI,EAAEC,SAAS,KAAK;IACvD,MAAMC,SAAS,GAAI,GAAEH,OAAQ,IAAGC,IAAK,EAAC;IACtCP,UAAU,CAACU,WAAW,KAAK;MACzB,GAAGA,WAAW;MACd,CAACD,SAAS,GAAGD;IACf,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,mBAAmB,GAAG,MAAAA,CAAOL,OAAO,EAAEC,IAAI,KAAK;IACnD,MAAME,SAAS,GAAI,GAAEH,OAAQ,IAAGC,IAAK,EAAC;IACtC,MAAMK,WAAW,GAAGb,OAAO,CAACU,SAAS,CAAC;;IAEtC;IACA,IAAI,CAACG,WAAW,IAAIA,WAAW,GAAG,CAAC,IAAIA,WAAW,GAAG,CAAC,EAAE;MACtDC,KAAK,CAAC,iCAAiC,CAAC;MACxC;IACF;;IAEA;IACA,MAAMC,IAAI,GAAG;MACXrB,QAAQ,EAAEa,OAAO;MACjB,CAAE,GAAEC,IAAK,OAAM,GAAGK,WAAW,CAAE;IACjC,CAAC;;IAED,IAAI;MACF;MACA,MAAMG,QAAQ,GAAG,MAAM/B,KAAK,CAACgC,IAAI,CAAE,uCAAsC,EAAEF,IAAI,CAAC;MAChFG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACD,IAAI,CAAC,CAAC,CAAC;MAC5BD,KAAK,CAAC,gCAAgC,CAAC;;MAEvC;MACAb,UAAU,CAACU,WAAW,KAAK;QACzB,GAAGA,WAAW;QACd,CAACD,SAAS,GAAG,EAAE,CAAC;MAClB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDN,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,MAAMO,aAAa,GAAGA,CAACC,IAAI,EAAEf,OAAO,EAAEC,IAAI,EAAEe,KAAK,KAAK;IACpD,IAAID,IAAI,KAAK,CAAC,CAAC,EAAE;MACf,MAAMZ,SAAS,GAAI,GAAEH,OAAQ,IAAGC,IAAK,EAAC;MAEtC,IAAKA,IAAI,KAAK,OAAO,IAAIX,WAAW,CAAC2B,OAAO,KAAKD,KAAK,CAACE,QAAQ,IAC5DjB,IAAI,KAAK,QAAQ,IAAIX,WAAW,CAAC2B,OAAO,KAAKD,KAAK,CAACG,SAAU,EAAE;QAChE,oBACEtC,OAAA,CAAAE,SAAA;UAAAqC,QAAA,gBACEvC,OAAA;YACEwC,IAAI,EAAC,QAAQ;YACbC,GAAG,EAAC,GAAG;YACPC,GAAG,EAAC,GAAG;YACPC,KAAK,EAAE/B,OAAO,CAACU,SAAS,CAAC,IAAI,EAAG;YAChCsB,QAAQ,EAAGC,CAAC,IAAK3B,kBAAkB,CAACC,OAAO,EAAEC,IAAI,EAAEyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YACnEI,WAAW,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC,eACFnD,OAAA;YAAQoD,OAAO,EAAEA,CAAA,KAAM5B,mBAAmB,CAACL,OAAO,EAAEC,IAAI,CAAE;YAAAmB,QAAA,EAAC;UAAO;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eAC3E,CAAC;MAEP,CAAC,MAAM;QACL,OAAO,SAAS;MAClB;IACF;IACA,OAAOjB,IAAI;EACb,CAAC;EAED,MAAMmB,YAAY,GAAG,MAAAA,CAAOlC,OAAO,EAAEmC,UAAU,KAAK;IAElD,IAAI;MAEF,MAAM1B,QAAQ,GAAG/B,KAAK,CAACgC,IAAI,CAAC,gDAAgD,EAAE;QAAEvB,QAAQ,EAAEa,OAAO;QAAEmC,UAAU,EAAEA;MAAW,CAAC,CAAC;MAE5H,IAAI1B,QAAQ,CAACD,IAAI,CAAC4B,OAAO,EAAE;QACzBzB,OAAO,CAACC,GAAG,CAAE,GAAEuB,UAAW,sBAAqB,CAAC;QAChD;MACF,CAAC,MAAM;QACLxB,OAAO,CAACE,KAAK,CAAC,yBAAyB,CAAC;QACxC;MACF;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF,CAAC;;EAED,SAASwB,mBAAmBA,CAACrC,OAAO,EAAEsC,QAAQ,EAAErC,IAAI,EAAE;IACpD;IACA,MAAMsC,aAAa,GAAG;MAAEpD,QAAQ,EAAEa,OAAO;MAAEwC,OAAO,EAAEF,QAAQ;MAAErC,IAAI,EAAEA;IAAK,CAAC;;IAE1E;IACAvB,KAAK,CAACgC,IAAI,CAAE,iDAAgD,EAAE6B,aAAa,CAAC,CACzEE,IAAI,CAAChC,QAAQ,IAAI;MAChBE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAACD,IAAI,CAAC;MACtCD,KAAK,CAAC,+BAA+B,CAAC;MACtC;IACF,CAAC,CAAC,CACDmC,KAAK,CAAC7B,KAAK,IAAI;MACdF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN;EAEAxC,SAAS,CAAC,MAAM;IACd,MAAMsE,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACFhC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;QAClB,MAAMgC,GAAG,GAAG,MAAMlE,KAAK,CAACmE,GAAG,CAAE,yCAAwC1D,QAAS,EAAC,CAAC;QAEhFK,QAAQ,CAACoD,GAAG,CAACpC,IAAI,CAAC;MAEpB,CAAC,CAAC,OAAOsC,GAAG,EAAE;QACZnC,OAAO,CAACE,KAAK,CAACiC,GAAG,CAAC;QAClB;MACF;IACF,CAAC;;IAEDH,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACxD,QAAQ,CAAC,CAAC;EAId,IAAI,CAACI,MAAM,IAAI,EAACD,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAE2B,OAAO,GAAE;IACpC,oBAAOpC,OAAA;MAAAuC,QAAA,EAAK;IAAoC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAC1D;EAAC;EAGD,oBACEnD,OAAA;IAAKkE,SAAS,EAAC,WAAW;IAAA3B,QAAA,EACvB7B,MAAM,CAACyD,GAAG,CAAC,CAAChC,KAAK,EAAEiC,KAAK,KACtB3D,WAAW,CAAC2B,OAAO,KAAKD,KAAK,CAACE,QAAQ,IAAI5B,WAAW,CAAC2B,OAAO,KAAKD,KAAK,CAACG,SAAS,gBAChFtC,OAAA;MAAiBkE,SAAS,EAAC,YAAY;MAAA3B,QAAA,gBACrCvC,OAAA;QAAAuC,QAAA,gBAAKvC,OAAA;UAAAuC,QAAA,EAAQ;QAAS;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAChB,KAAK,CAAC7B,QAAQ;MAAA;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtDnD,OAAA;QAAAuC,QAAA,gBAAKvC,OAAA;UAAAuC,QAAA,EAAQ;QAAe;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAChB,KAAK,CAACkC,cAAc;MAAA;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClEnD,OAAA;QAAAuC,QAAA,gBAAKvC,OAAA;UAAAuC,QAAA,EAAQ;QAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAChB,KAAK,CAACmC,WAAW;MAAA;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5DnD,OAAA;QAAAuC,QAAA,gBAAKvC,OAAA;UAAAuC,QAAA,EAAQ;QAAS;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAChB,KAAK,CAACE,QAAQ;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtDnD,OAAA;QAAAuC,QAAA,gBAAKvC,OAAA;UAAAuC,QAAA,EAAQ;QAAU;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAChB,KAAK,CAACG,SAAS;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACxDnD,OAAA;QAAAuC,QAAA,gBAAKvC,OAAA;UAAAuC,QAAA,EAAQ;QAAW;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAClB,aAAa,CAACE,KAAK,CAACoC,UAAU,EAAEpC,KAAK,CAAC7B,QAAQ,EAAE,OAAO,EAAE6B,KAAK,CAAC;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACzGnD,OAAA;QAAAuC,QAAA,gBAAKvC,OAAA;UAAAuC,QAAA,EAAQ;QAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAClB,aAAa,CAACE,KAAK,CAACqC,WAAW,EAAErC,KAAK,CAAC7B,QAAQ,EAAE,QAAQ,EAAE6B,KAAK,CAAC;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5GnD,OAAA;QAAAuC,QAAA,gBAAKvC,OAAA;UAAAuC,QAAA,EAAQ;QAAa;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAChB,KAAK,CAACsC,OAAO;MAAA;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACzDnD,OAAA;QAAAuC,QAAA,gBAAKvC,OAAA;UAAAuC,QAAA,EAAQ;QAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAChB,KAAK,CAACuC,WAAW,KAAK,CAAC,GAAG,WAAW,GAAG,SAAS;MAAA;QAAA1B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAE3FhB,KAAK,CAACuC,WAAW,KAAK,CAAC,IAAIjE,WAAW,CAAC2B,OAAO,KAAKD,KAAK,CAACG,SAAS,iBACjEtC,OAAA;QAAQoD,OAAO,EAAEA,CAAA,KAAM;UACrBtB,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAC/B,CAAE;QAAAQ,QAAA,EAAC;MAEH;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAET,eACDnD,OAAA;QAAAuC,QAAA,gBAAKvC,OAAA;UAAAuC,QAAA,EAAQ;QAAW;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAChB,KAAK,CAACwC,UAAU,KAAK,CAAC,GAAG,QAAQ,GAAG,MAAM;MAAA;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACnFhB,KAAK,CAACwC,UAAU,KAAK,CAAC,IAAIlE,WAAW,CAAC2B,OAAO,KAAKD,KAAK,CAACE,QAAQ,iBAC/DrC,OAAA;QAAQoD,OAAO,EAAEC,YAAY,CAAClB,KAAK,CAAC7B,QAAQ,EAAE,KAAK,CAAE;QAAAiC,QAAA,EAAE;MACxB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACxC,eAEDnD,OAAA;QAAAuC,QAAA,eAAKvC,OAAA;UAAAuC,QAAA,EAAQ;QAAiB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC5C1C,WAAW,CAAC2B,OAAO,KAAKD,KAAK,CAACE,QAAQ,iBACrCrC,OAAA;QAAAuC,QAAA,EACGJ,KAAK,CAACyC,aAAa,iBAClB5E,OAAA;UAAAuC,QAAA,gBACEvC,OAAA;YAAOwC,IAAI,EAAC,MAAM;YAACqC,IAAI,EAAC,cAAc;YAAC9B,WAAW,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnEnD,OAAA;YAAQwC,IAAI,EAAC,QAAQ;YAACY,OAAO,EAAEA,CAAA,KAAM;cACnC,MAAMO,OAAO,GAAGmB,QAAQ,CAACC,aAAa,CAAC,uBAAuB,CAAC,CAACpC,KAAK;cACrEa,mBAAmB,CAACrB,KAAK,CAAC7B,QAAQ,EAAEqD,OAAO,EAAE,OAAO,CAAC;YACvD,CAAE;YAAApB,QAAA,EAAC;UAAM;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MACP;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN,eACDnD,OAAA;QAAAuC,QAAA,eAAKvC,OAAA;UAAAuC,QAAA,EAAQ;QAAkB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC7C1C,WAAW,CAAC2B,OAAO,KAAKD,KAAK,CAACG,SAAS,iBACtCtC,OAAA;QAAAuC,QAAA,EACGJ,KAAK,CAAC6C,cAAc,iBACnBhF,OAAA;UAAAuC,QAAA,gBACEvC,OAAA;YAAOwC,IAAI,EAAC,MAAM;YAACqC,IAAI,EAAC,eAAe;YAAC9B,WAAW,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpEnD,OAAA;YAAQwC,IAAI,EAAC,QAAQ;YAACY,OAAO,EAAEA,CAAA,KAAM;cACnC,MAAMO,OAAO,GAAGmB,QAAQ,CAACC,aAAa,CAAC,wBAAwB,CAAC,CAACpC,KAAK;cACtEa,mBAAmB,CAACrB,KAAK,CAAC7B,QAAQ,EAAEqD,OAAO,EAAE,QAAQ,CAAC;YACxD,CAAE;YAAApB,QAAA,EAAC;UAAM;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MACP;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN,eACDnD,OAAA;QAAAuC,QAAA,gBAAKvC,OAAA;UAAAuC,QAAA,EAAQ;QAAQ;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAChB,KAAK,CAAC8C,KAAK;MAAA;QAAAjC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GArD1CiB,KAAK;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAuDV,CAAC,gBAENnD,OAAA;MAAiBkE,SAAS,EAAC,eAAe;MAAA3B,QAAA,EAAC;IAE3C,GAFU6B,KAAK;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CAER;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAA/C,EAAA,CAjNKD,KAAK;EAAA,QAEQR,WAAW;AAAA;AAAAuF,EAAA,GAFxB/E,KAAK;AAmNX,eAAeA,KAAK;AAAA,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}