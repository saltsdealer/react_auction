[{"E:\\code5200\\mini\\client\\src\\index.js":"1","E:\\code5200\\mini\\client\\src\\App.js":"2","E:\\code5200\\mini\\client\\src\\components\\Footer.jsx":"3","E:\\code5200\\mini\\client\\src\\pages\\Login.jsx":"4","E:\\code5200\\mini\\client\\src\\pages\\Register.jsx":"5","E:\\code5200\\mini\\client\\src\\pages\\Post.jsx":"6","E:\\code5200\\mini\\client\\src\\pages\\Home.jsx":"7","E:\\code5200\\mini\\client\\src\\components\\Navbar.jsx":"8","E:\\code5200\\mini\\client\\src\\components\\Menu.jsx":"9","E:\\code5200\\mini\\client\\src\\context\\authContext.js":"10","E:\\code5200\\mini\\client\\src\\pages\\Single.jsx":"11","E:\\code5200\\mini\\client\\src\\pages\\User.jsx":"12","E:\\code5200\\mini\\client\\src\\pages\\PostUser.jsx":"13","E:\\code5200\\mini\\client\\src\\pages\\Order.jsx":"14","E:\\code5200\\mini\\client\\src\\components\\Bidding.jsx":"15","E:\\code5200\\mini\\client\\src\\pages\\Statistics.jsx":"16","E:\\code5200\\mini\\client\\src\\pages\\AdminLogin.jsx":"17","E:\\code5200\\mini\\client\\src\\pages\\DeleteUser.jsx":"18","E:\\code5200\\mini\\client\\src\\pages\\DeleteProduct.jsx":"19","E:\\code5200\\mini\\client\\src\\components\\AdminNavbar.jsx":"20","E:\\code5200\\mini\\client\\src\\components\\MixedChart.jsx":"21","E:\\code5200\\mini\\client\\src\\pages\\AdminHome.jsx":"22","E:\\code5200\\mini\\client\\src\\pages\\Chat.jsx":"23","E:\\code5200\\mini\\client\\src\\components\\DynamicTable.jsx":"24"},{"size":563,"mtime":1700949134924,"results":"25","hashOfConfig":"26"},{"size":2674,"mtime":1701061707417,"results":"27","hashOfConfig":"26"},{"size":886,"mtime":1701062071067,"results":"28","hashOfConfig":"26"},{"size":1445,"mtime":1700949134925,"results":"29","hashOfConfig":"26"},{"size":2063,"mtime":1700396237972,"results":"30","hashOfConfig":"26"},{"size":8765,"mtime":1700992211667,"results":"31","hashOfConfig":"26"},{"size":5415,"mtime":1701115045353,"results":"32","hashOfConfig":"26"},{"size":2619,"mtime":1701062481488,"results":"33","hashOfConfig":"26"},{"size":1271,"mtime":1701108661964,"results":"34","hashOfConfig":"26"},{"size":1246,"mtime":1700949134924,"results":"35","hashOfConfig":"26"},{"size":8601,"mtime":1700715492164,"results":"36","hashOfConfig":"26"},{"size":8836,"mtime":1700982182387,"results":"37","hashOfConfig":"26"},{"size":2980,"mtime":1700393229155,"results":"38","hashOfConfig":"26"},{"size":8998,"mtime":1701107710196,"results":"39","hashOfConfig":"26"},{"size":6233,"mtime":1701105929830,"results":"40","hashOfConfig":"26"},{"size":1618,"mtime":1700949134925,"results":"41","hashOfConfig":"26"},{"size":1368,"mtime":1700981671038,"results":"42","hashOfConfig":"26"},{"size":1673,"mtime":1700949134924,"results":"43","hashOfConfig":"26"},{"size":1697,"mtime":1700949134924,"results":"44","hashOfConfig":"26"},{"size":1380,"mtime":1701062362958,"results":"45","hashOfConfig":"26"},{"size":2302,"mtime":1700949134923,"results":"46","hashOfConfig":"26"},{"size":8345,"mtime":1700991791714,"results":"47","hashOfConfig":"26"},{"size":2531,"mtime":1701061858678,"results":"48","hashOfConfig":"26"},{"size":994,"mtime":1701058322233,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1evj80o",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"53"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"53"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\code5200\\mini\\client\\src\\index.js",[],[],["128","129","130","131","132","133"],"E:\\code5200\\mini\\client\\src\\App.js",["134"],[],"E:\\code5200\\mini\\client\\src\\components\\Footer.jsx",[],[],"E:\\code5200\\mini\\client\\src\\pages\\Login.jsx",[],[],"E:\\code5200\\mini\\client\\src\\pages\\Register.jsx",[],[],"E:\\code5200\\mini\\client\\src\\pages\\Post.jsx",[],[],"E:\\code5200\\mini\\client\\src\\pages\\Home.jsx",[],[],"E:\\code5200\\mini\\client\\src\\components\\Navbar.jsx",[],[],["135","136","137","138","139","140"],"E:\\code5200\\mini\\client\\src\\components\\Menu.jsx",["141"],[],"E:\\code5200\\mini\\client\\src\\context\\authContext.js",[],[],"E:\\code5200\\mini\\client\\src\\pages\\Single.jsx",["142"],[],"import React, { useCallback, useContext, useEffect, useState } from 'react'\nimport Edit from \"../img/edit.png\"\nimport Delete from \"../img/delete.png\"\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport Menu from '../components/Menu'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { AuthContext } from '../context/authContext';\nimport Bidding from '../components/Bidding.jsx'\n\nconst Single = () => {\n\n  const [product, setProduct] = useState({});\n  const [timerDuration, setTimerDuration] = useState(0);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const product_id = location.pathname.split(\"/\")[2];\n  const [status, setStatus] = useState('');\n  const { currentUser } = useContext(AuthContext);\n\n\n  const openBidding = async () => {\n    setStatus('Bidding'); // Open bidding immediately\n    // count down trying \n    const endTime = new Date();\n    endTime.setSeconds(endTime.getSeconds() + parseInt(timerDuration));\n    localStorage.setItem('endTime', endTime);\n\n    setCountdown(timerDuration);\n    // ended here\n    // setTimeout(() => {\n    //   setStatus('Ended'); // End bidding after the specified duration\n    // }, timerDuration * 1000); // Convert seconds to milliseconds\n  };\n\n  // change or break this to a use effect just check if it is sold\n  const startBidSession = async () => {\n    try {\n      const before = await axios.get(`http://localhost:8800/api/orders/before/${product_id}`);\n      if (before.data.status === '1') {\n        setStatus('Sold');\n        // get the bid session and find all the bids here\n        return\n      } else {\n        //create bid session\n        await axios.post(`http://localhost:8800/api/orders/`, {\n          user_id: currentUser.user_id,\n          time: timerDuration,\n          productId: product_id\n        });\n\n      }\n    } catch (err) {\n\n    }\n  }\n  //setting status \n  useEffect(() => {\n    const fetchStatus = async () => {\n      try {\n        console.log(\"error here 1\");\n        // 1 for sold 0 for unsold\n        const res1 = await axios.get(`http://localhost:8800/api/orders/before/${product_id}`);\n        console.log(\"status: \", res1.data.status)\n        if (res1.data.status === '1') setStatus('Sold');\n        // if not initialized to unopened\n      } catch (err) {\n        console.log(\"Error fetching data:\", err);\n      }\n    };\n    fetchStatus();\n  }, [product_id]);\n\n  // setting products\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log(\"Fetching data for product ID:\", product_id);\n      try {\n        const res = await axios.get(`http://localhost:8800/api/products/${product_id}`);\n        setProduct(res.data);\n        \n      } catch (err) {\n        console.log(\"Error fetching data:\", err);\n      }\n    };\n    fetchData();\n  }, [product_id]);\n\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`http://localhost:8800/api/products/${product_id}`);\n      navigate(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n\n\n  const startBiddingProcess = () => {\n    startBidSession(); // Starting the bid session\n    openBidding();     // Opening the bidding\n  };\n\n\n  const fetchStatusProcessing = useCallback(async () => {\n    \n    if (status !== 'Sold' && status !== 'unopened') {\n      console.log(\"reading status\", status)\n      \n      const response = await axios.get(`http://localhost:8800/api/orders/time/${product_id}`);\n      console.log(\"reading res:\", response.data.endTime);\n      if (!response.data.endTime ){\n        setStatus('unopened');\n        return;\n      }\n      const endTime = new Date(response.data.endTime);\n      const currentTime = new Date();\n      if (endTime > currentTime) {\n        if (status !== 'Bidding')\n        setStatus('Bidding');\n        return;\n      } else if (endTime < currentTime) {\n        // time ended\n        const res = await axios.get(`http://localhost:8800/api/orders/bid_in_session/${product_id}`);\n        if (res.data.bid_status === '1') {\n          setStatus('Sold');\n          await axios.post(`http://localhost:8800/api/orders/update/${product_id}`);\n          return;\n        } else if (res.data.bid_status === '0'){\n          setStatus('Ended With No biders')\n          await axios.delete(`http://localhost:8800/api/orders/${product_id}`);\n        } else {\n          console.log('No return value, check backend logic')\n        }\n    }\n    }\n  },[status,product_id]);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      fetchStatusProcessing();\n    }, 1000); // Run every second\n  \n    // Cleanup function to clear the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [fetchStatusProcessing]);\n\n  //count down \n  const [countdown, setCountdown] = useState(null);\n  const fetchEndTime = useCallback(async () => {\n    try {\n      const response = await axios.get(`http://localhost:8800/api/orders/time/${product_id}`);\n      const endTime = new Date(response.data.endTime);\n      //console.log(\"end_time:\",endTime);\n      return endTime;\n    } catch (error) {\n      console.error(\"Error fetching end time:\", error);\n      return null;\n    }\n  });\n\n  const calculateRemainingTime = (endTime) => {\n    const remainingTime = Math.floor((endTime.getTime() - new Date().getTime()) / 1000);\n    return remainingTime > 0 ? remainingTime : null;\n  };\n\n  useEffect(() => {\n    if (status !== 'Bidding') {\n      setCountdown(null);\n      return;\n    }\n    let intervalId;\n\n    const initializeCountdown = async () => {\n      const endTime = await fetchEndTime();\n      if (endTime) {\n        const remainingTime = calculateRemainingTime(endTime);\n        setCountdown(remainingTime);\n\n        intervalId = setInterval(() => {\n          const newRemainingTime = calculateRemainingTime(endTime);\n          if (newRemainingTime !== null) {\n            setCountdown(newRemainingTime);\n          } else {\n            clearInterval(intervalId);\n              // Set the status to 'Ended' here\n          }\n        }, 1000);\n      }\n    };\n\n    initializeCountdown();\n\n    return () => clearInterval(intervalId);\n  }, [fetchEndTime,status]);\n  // Render countdown if it's active\n  const renderCountdown = () => {\n    if (countdown !== null) {\n      return <p>Time remaining: {countdown} seconds</p>;\n    }\n    //setStatus('Ended')\n    return null;\n  };\n  // ended here\n  if (!product || !currentUser || !product.user_id || !currentUser.user_id) {\n    return <div>Login to see more...</div>; // or any other appropriate fallback content\n  }\n  // console.log(\"status\", status)\n  return (\n    <div className='single'>\n      <div className=\"content\">\n        <img src={product?.picture} alt='' />\n        <div className='user'>\n          <div className=\"info\">\n            <Link to={`/user/${product?.username}`}>\n              <span>Uploaded by : {product?.username}</span>\n            </Link>\n            <p>Posted {moment(product.create_time).fromNow()}</p>\n            <p>Starting at {product.price} $</p>\n          </div>\n          {currentUser.user_id === product.user_id && (\n\n            <div className='edit'>\n\n              {status !== 'Bidding' && (\n                <div className='edit'>\n                  <Link to={'/upload?edit=2'} state={product}>\n                    <img src={Edit} alt='' />\n                  </Link>\n                  <img onClick={handleDelete} src={Delete} alt='' />\n                </div>\n              )}\n\n              {/* modify this part so that a useeffect would return the status real time\n              and hence this part could check the status to decide showing or not */}\n              {status !== 'Sold' && status !== 'Bidding' && (\n                <>\n                  <input\n                    type=\"number\"\n                    placeholder=\"Enter time in seconds\"\n                    value={timerDuration}\n                    onChange={(e) => setTimerDuration(e.target.value)}\n                  />\n                  <button onClick={startBiddingProcess}>Open Bidding</button>\n                </>\n              )}\n\n            </div>\n          )}\n        </div>\n        <h1>{product.pname}</h1>\n        {product.description}\n        <div className=\"status\">Status: {status} : {renderCountdown()}</div>\n        {/* Bids Table */}\n        {status !== 'unopened' && <Bidding product_id={product?.product_id} indicator={status}\n          user_id={currentUser?.user_id} start_price={product?.price} puser={product?.user_id}\n          time={timerDuration} />}\n      </div>\n      <Menu cat={product.prod_id} />\n      {/* Status Indicator */}\n\n    </div>\n  )\n}\n\nexport default Single;","E:\\code5200\\mini\\client\\src\\pages\\User.jsx",["143"],[],"import React, { useContext, useEffect, useState } from 'react';\nimport Edit from \"../img/edit.png\";\nimport Delete from \"../img/delete.png\";\nimport { Link, useParams, useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { AuthContext } from '../context/authContext';\n\nconst User = () => {\n  // buyer_rate is made by buyer to seller \n  // seller rate vice versa\n  const location = useLocation();\n  const [user, setUser] = useState({});\n  const [buy, setBuy] = useState({});\n  const navigate = useNavigate();\n  const { currentUser } = useContext(AuthContext);\n  const username = location.pathname.split(\"/\")[2];\n  const [buyorder, setbuyOrder] = useState({});\n  const [sellorder, setSellOrder] = useState({});\n  const [latestReviews, setLatestReviews] = useState([]);\n  const [averageRate, setAverageRate] = useState(null);\n\n\n  const [visibility, setVisibility] = useState({\n    boughtProducts: true,\n    uploadedProducts: true,\n    orderCreated: true\n  });// State to toggle visibility\n\n  function getOrderIDByProductID(order, productId) {\n    for (let i = 0; i < order.length; i++) {\n      if (order[i].product_id === productId) {\n        return order[i].order_id;\n      }\n    }\n    return null; // Return null if no match is found\n  }\n\n  const toggleVisibility = (section) => {\n    setVisibility(prevState => ({\n      ...prevState,\n      [section]: !prevState[section]\n    }));\n  };\n\n  const getText = (html) => {\n    const doc = new DOMParser().parseFromString(html, \"text/html\")\n    return doc.body.textContent\n  }\n\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const res = await axios.get(`http://localhost:8800/api/users/${username}`);\n        setUser(res.data);\n      } catch (err) {\n        console.error(err);\n        // Redirect or handle error\n      }\n    };\n\n    fetchUser();\n  }, [username]);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const res = await axios.get(`http://localhost:8800/api/users/product/${username}`);\n        setBuy(res.data);\n      } catch (err) {\n        console.error(err);\n        // Redirect or handle error\n      }\n    };\n\n    fetchUser();\n  }, [username]);\n\n  useEffect(() => {\n    const fetchOrder = async () => {\n      try {\n        const buy_order = await axios.post(`http://localhost:8800/api/users/orderByUser/`, { name: username, userType: 'buyer' });\n        const sell_order = await axios.post(`http://localhost:8800/api/users/orderByUser/`, { name: username, userType: 'seller' });\n        setbuyOrder(buy_order.data);\n        setSellOrder(sell_order.data);\n      } catch (err) {\n        console.error(err);\n        // Redirect or handle error\n      }\n    };\n\n    fetchOrder();\n  }, [username]);\n\n  const userDetails = user.userDetails;\n  const userProducts = user.userProducts;\n\n  useEffect(() => {\n    const fetchAverageRates = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8800/api/users/rate/${username}`); // Adjust the URL as needed\n        setAverageRate(response.data.average_value);\n        const reviews = await axios.get(`http://localhost:8800/api/users/reviews/${username}`);\n        setLatestReviews(reviews.data)\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        // Handle error, for example, set an error state\n      }\n    };\n\n    fetchAverageRates();\n  }, [username]);\n\n\n  console.log(\"reviews:\", latestReviews)\n  if (!userDetails || !userProducts || !buy) {\n    return <div>Loading...or have you logged in yet?</div>; // or any other loading indicator\n  }\n\n\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`http://localhost:8800/api/users/${userDetails.user_id}`);\n      navigate(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <div className='user_page'>\n      <div className=\"content_user\">\n        {userDetails && currentUser && Array.isArray(userProducts) && Array.isArray(buy) ? (\n          <div>\n            <div className='user_info'>\n              <h2>NUID : {userDetails?.user_id}</h2>\n              <h2>\n                USER : {currentUser?.user_id === userDetails?.user_id ? userDetails?.user_name : userDetails?.nickname}\n              </h2>\n              <h2>AVG RATES AS SELLER : {averageRate}</h2>\n              {currentUser?.user_id === userDetails?.user_id && (\n                <div className='edit'>\n                  <Link to={'/change?edit=2'} state={userDetails}>\n                    <img src={Edit} alt='' />\n                  </Link>\n                  <img onClick={handleDelete} src={Delete} alt='' />\n                </div>\n              )}\n              <p>\n                Created {userDetails?.create_time ? moment(userDetails.create_time).fromNow() : ''} <br />\n              </p>\n              <div>\n                {currentUser?.user_id === userDetails?.user_id ? (\n                  <>\n                    Address: {userDetails?.address_detail}<br />\n                    State: {userDetails?.add_id}<br />\n                    Service: {userDetails?.manager_id}<br />\n                    Comments got: {latestReviews.map((comment, index) => (\n                      <div key={index}>\"{comment.buyer_comment}\"</div>\n                    ))}\n                  </>\n                ) : (\n                  <>State: {userDetails?.add_id}</>\n                )}\n              </div>\n            </div>\n            <div className='products'>\n              <h1>Uploaded</h1>\n              <button onClick={() => toggleVisibility('uploadedProducts')}>\n                {visibility.uploadedProducts ? 'Hide' : 'Show'}\n              </button>\n              {visibility.uploadedProducts && userProducts.map((product_user, index) => (\n                <div className='product_user' key={product_user.product_id}>\n                  <div className='img'>\n                    <img src={product_user.picture} alt='' />\n                  </div>\n                  <div className=\"content\">\n                    {\n                      getOrderIDByProductID(sellorder, product_user.product_id) !== null ? (\n                        <Link className=\"link\" to={`/order/${getOrderIDByProductID(sellorder, product_user.product_id)}`}>\n                          <h2>Item {index + 1} : order created</h2>\n                        </Link>\n                      ) : (\n                        // Optionally, render something else when getOrderIDByProductID returns null\n                        <h2>Item {index + 1}</h2>\n                      )\n                    }\n                    <Link className=\"link\" to={`/product/${product_user.product_id}`}>\n                      <h1>{product_user.pname}</h1>\n                    </Link>\n\n                    <p>{product_user.pname} at {product_user.price}$</p>\n                    <p>Status: {getText(product_user.status)}</p>\n                  </div>\n                </div>\n              ))}\n              {currentUser?.user_id === userDetails?.user_id && (\n                <>\n                  <h1>Bought</h1>\n                  <button onClick={() => toggleVisibility('boughtProducts')}>\n                    {visibility.boughtProducts ? 'Hide' : 'Show'}\n                  </button>\n                  {visibility.boughtProducts && buy.map((product_user, index) => (\n                    <div className='product_user' key={product_user.product_id}>\n                      <div className='img'>\n                        <img src={product_user.picture} alt='' />\n                      </div>\n                      <div className=\"content\">\n                        {\n                          getOrderIDByProductID(buyorder, product_user.product_id) !== null ? (\n                            <Link className=\"link\" to={`/order/${getOrderIDByProductID(buyorder, product_user.product_id)}`}>\n                              <h2>Order {index + 1} : order created</h2>\n                            </Link>\n                          ) : (\n                            // Optionally, render something else when getOrderIDByProductID returns null\n                            <h2>Order {index + 1}</h2>\n                          )\n                        }\n                        <Link className=\"link\" to={`/product/${product_user.product_id}`}>\n                          <h1>{product_user.pname}</h1>\n                        </Link>\n                        <p>{product_user.pname} at {product_user.final_price}$</p>\n                        <p>Status: {product_user.status}</p>\n                      </div>\n                    </div>\n                  ))}\n\n                </>\n\n              )}\n              {/* the list of participated records */}\n            </div>\n          </div>\n        ) : (\n          <div>Log out...</div>\n        )}\n      </div>\n    </div>\n  );\n\n}\n\nexport default User","E:\\code5200\\mini\\client\\src\\pages\\PostUser.jsx",["144","145","146","147"],[],"import axios from 'axios';\r\nimport React, { useContext, useState } from 'react'\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css'; // this is text editor\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport { AuthContext } from '../context/authContext.js'\r\n\r\nconst PostUser = () => {\r\n    const state = useLocation().state;\r\n    const [nname, setNname] = useState(state?.nickname || \"\");\r\n    const [uname, setUname] = useState(state?.user_name || \"\");\r\n    const [add, setSCode] = useState(state?.add_id || \"\");\r\n    const [address, setAdd] = useState(state?.address_detail || \"\");\r\n    const [pw, setPW] = useState();\r\n    const [email, setEmail] = useState(state?.email || \"\");\r\n    const {currentUser,logout} = useContext(AuthContext);\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const combinedFunction = () => {\r\n        handleClick();\r\n        logout();\r\n        navigate(\"/\");\r\n      };\r\n      \r\n\r\n    const handleClick = async (e) => {\r\n        \r\n        try {\r\n            await axios.put(`http://localhost:8800/api/users/${state.user_id}`, {\r\n                nname,\r\n                uname,\r\n                add,\r\n                address,\r\n                pw,\r\n                email,\r\n                pw\r\n            })\r\n\r\n            //navigate(\"/\")\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"add\">\r\n            <div className=\"content\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder= {nname}\r\n                    onChange={(e) => setUname(e.target.value)}\r\n                    \r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"new password\"\r\n                    onChange={(e) => setPW(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder={uname}\r\n                    onChange={(e) => setNname(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder={address}\r\n                    onChange={(e) => setAdd(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder={add}\r\n                    onChange={(e) => setSCode(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"menu\">\r\n                <div className=\"item\">\r\n\r\n                    <div className=\"buttons\">\r\n                        <button onClick={combinedFunction}>Logout and Upload</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default PostUser;","E:\\code5200\\mini\\client\\src\\pages\\Order.jsx",["148","149","150","151","152"],[],"E:\\code5200\\mini\\client\\src\\components\\Bidding.jsx",["153"],[],"E:\\code5200\\mini\\client\\src\\pages\\Statistics.jsx",[],[],"E:\\code5200\\mini\\client\\src\\pages\\AdminLogin.jsx",["154"],[],"import React, { useContext, useState } from \"react\";\r\n\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../context/authContext\";\r\n\r\nconst AdminLogin = () => {\r\n  const [inputs, setInputs] = useState({\r\n    password: \"\",\r\n    adminName: \"\",\r\n  });\r\n  const [err, setError] = useState(null);\r\n  const navigate = useNavigate(); // this isn't working , and I don't know why yet\r\n  const { adminLogin } = useContext(AuthContext);\r\n\r\n  const handleChange = (e) => {\r\n    setInputs((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await adminLogin(inputs);\r\n      navigate(\"/admin/home\");\r\n    } catch (err) {\r\n      setError(err.response.data);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"auth\">\r\n      <h1>Admin Login</h1>\r\n      <form>\r\n        <input\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"admin name\"\r\n          name=\"adminName\"\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          required\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          name=\"password\"\r\n          onChange={handleChange}\r\n        />\r\n        <button onClick={handleSubmit}>Login</button>\r\n        {err && <p>{err} </p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLogin;\r\n","E:\\code5200\\mini\\client\\src\\pages\\DeleteUser.jsx",[],[],"E:\\code5200\\mini\\client\\src\\pages\\DeleteProduct.jsx",[],[],"E:\\code5200\\mini\\client\\src\\components\\AdminNavbar.jsx",[],[],"E:\\code5200\\mini\\client\\src\\components\\MixedChart.jsx",[],[],"E:\\code5200\\mini\\client\\src\\pages\\AdminHome.jsx",[],[],"E:\\code5200\\mini\\client\\src\\pages\\Chat.jsx",[],[],"E:\\code5200\\mini\\client\\src\\components\\DynamicTable.jsx",[],[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":13,"column":8,"nodeType":"169","messageId":"170","endLine":13,"endColumn":15},{"ruleId":"155","replacedBy":"171"},{"ruleId":"157","replacedBy":"172"},{"ruleId":"159","replacedBy":"173"},{"ruleId":"161","replacedBy":"174"},{"ruleId":"163","replacedBy":"175"},{"ruleId":"165","replacedBy":"176"},{"ruleId":"167","severity":1,"message":"177","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":11},{"ruleId":"178","severity":1,"message":"179","line":152,"column":24,"nodeType":"169","endLine":152,"endColumn":35},{"ruleId":"167","severity":1,"message":"180","line":4,"column":16,"nodeType":"169","messageId":"170","endLine":4,"endColumn":25},{"ruleId":"167","severity":1,"message":"181","line":3,"column":8,"nodeType":"169","messageId":"170","endLine":3,"endColumn":18},{"ruleId":"167","severity":1,"message":"182","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":14},{"ruleId":"167","severity":1,"message":"183","line":17,"column":12,"nodeType":"169","messageId":"170","endLine":17,"endColumn":23},{"ruleId":"184","severity":1,"message":"185","line":38,"column":17,"nodeType":"186","messageId":"187","endLine":38,"endColumn":19},{"ruleId":"167","severity":1,"message":"188","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":28},{"ruleId":"167","severity":1,"message":"189","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":14},{"ruleId":"167","severity":1,"message":"190","line":3,"column":29,"nodeType":"169","messageId":"170","endLine":3,"endColumn":40},{"ruleId":"167","severity":1,"message":"191","line":17,"column":9,"nodeType":"169","messageId":"170","endLine":17,"endColumn":19},{"ruleId":"178","severity":1,"message":"192","line":146,"column":6,"nodeType":"193","endLine":146,"endColumn":16,"suggestions":"194"},{"ruleId":"178","severity":1,"message":"195","line":118,"column":6,"nodeType":"193","endLine":118,"endColumn":29,"suggestions":"196"},{"ruleId":"167","severity":1,"message":"189","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":14},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["197"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'Bidding' is defined but never used.","Identifier","unusedVar",[],[],[],["197"],[],[],"'img' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'useParams' is defined but never used.","'ReactQuill' is defined but never used.","'moment' is defined but never used.","'currentUser' is assigned a value but never used.","no-dupe-keys","Duplicate key 'pw'.","ObjectExpression","unexpected","'useCallback' is defined but never used.","'Link' is defined but never used.","'useNavigate' is defined but never used.","'truncateID' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array.","ArrayExpression",["198"],"React Hook useEffect has a missing dependency: 'bids'. Either include it or remove the dependency array.",["199"],"no-object-constructor",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [order_id, orders]",{"range":"204","text":"205"},"Update the dependencies array to be: [indicator, checkOrder, bids]",{"range":"206","text":"207"},[4837,4847],"[order_id, orders]",[4214,4237],"[indicator, checkOrder, bids]"]